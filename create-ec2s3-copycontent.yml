---
- name: Creating a new EC2 using Ansible playbook
  hosts: localhost
  connection: local
  gather_facts: false
  tags: newec2

  vars:
    keypair: key24
    instance_type: t2.micro
    image: ami-0f5d1713c9af4fe30
    wait: true
    group: myserver
    count: 1
    region: ap-southeast-2
    subnet_id: subnet-0202bcf8ba232706c
    vpc_id: vpc-0b3c34c4ea9640f9e
    bucket_name: my-ansible-bucket-19may2025-0807
    security_group: ec2-security-group
    ansible_python_interpreter: /usr/bin/python3  # Adjust as needed

  tasks:
    - name: Create a security group
      amazon.aws.ec2_group:
        name: "{{ security_group }}"
        description: Security Group for webserver Servers
        region: "{{ region }}"
        vpc_id: "{{ vpc_id }}"
        subnet_id: subnet-0202bcf8ba232706c
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 443
            to_port: 443
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 8080
            to_port: 8080
            cidr_ip: 0.0.0.0/0
        rules_egress:
          - proto: all
            cidr_ip: 0.0.0.0/0
      register: basic_firewall

    - name: Launch the new EC2 Instance
      amazon.aws.ec2_instance:
        key_name: "{{ keypair }}"
        instance_type: "{{ instance_type }}"
        image_id: "{{ image }}"
        region: "{{ region }}"
        vpc_subnet_id: "{{ subnet_id }}"
        count: "{{ count }}"
        wait: "{{ wait }}"
        security_groups: ["{{ security_group }}"]
      register: ec2

    - name: Add tags to the EC2 instances
      amazon.aws.ec2_tag:
        region: "{{ region }}"
        resource: "{{ item.instance_id }}"
        state: present
        tags:
          Name: MyTargetEc2Instance1
      loop: "{{ ec2.instances }}"

    - name: Add new instance to dynamic inventory group
      add_host:
        name: "{{ item.public_dns_name }}"
        groups: launched
      loop: "{{ ec2.instances }}"


- name: Copy file from S3 to EC2
  hosts: MyTargetEc2Instance1
  become: yes
  gather_facts: false
  vars:
    ansible_python_interpreter: /usr/bin/python3  # or virtualenv python

  tasks:
    - name: Download file from S3 to EC2
      amazon.aws.aws_s3:
        bucket: my-ansible-bucket-19may2025-0807
        object: path/in/s3/test.txt
        dest: /tmp/test.txt
        mode: get
        overwrite: yes
